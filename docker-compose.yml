services:
  # MinIO S3-compatible Storage
  # minio:
  #   image: minio/minio:latest
  #   container_name: trust-sec-minio
  #   restart: unless-stopped
  #   environment:
  #     - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
  #     - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
  #   ports:
  #     - "9000:9000" # API
  #     - "9001:9001" # Console
  #   volumes:
  #     - minio-data:/data
  #   command: server /data --console-address ":9001"
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "mc", "ready", "local"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

  # Next.js App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trust-sec-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_ENDPOINT_URL_S3=${AWS_ENDPOINT_URL_S3}
      - AWS_ENDPOINT_URL_IAM=${AWS_ENDPOINT_URL_IAM}
      - NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES=${NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - AUTH_GOOGLE_CLIENT_ID=${AUTH_GOOGLE_CLIENT_ID}
      - AUTH_GOOGLE_CLIENT_SECRET=${AUTH_GOOGLE_CLIENT_SECRET}
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - nginx

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: trust-sec-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
# volumes:
#   minio-data:
#     driver: local
